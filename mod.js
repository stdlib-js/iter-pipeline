// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var t=/./,r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e,n=Object.defineProperty,o=Object.prototype,u=o.toString,i=o.__defineGetter__,f=o.__defineSetter__,l=o.__lookupGetter__,c=o.__lookupSetter__;e=function(){try{return r({},"x",{}),!0}catch(t){return!1}}()?n:function(t,r,e){var n,a,p,y;if("object"!=typeof t||null===t||"[object Array]"===u.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof e||null===e||"[object Array]"===u.call(e))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+e+"`.");if((a="value"in e)&&(l.call(t,r)||c.call(t,r)?(n=t.__proto__,t.__proto__=o,delete t[r],t[r]=e.value,t.__proto__=n):t[r]=e.value),p="get"in e,y="set"in e,a&&(p||y))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&i&&i.call(t,r,e.get),y&&f&&f.call(t,r,e.set),t};var a=e;function p(t,r,e){a(t,r,{configurable:!1,enumerable:!1,writable:!1,value:e})}function y(t){return"boolean"==typeof t}var s="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function b(){return s&&"symbol"==typeof Symbol.toStringTag}var v=Object.prototype.toString;var d=Object.prototype.hasOwnProperty;var g="function"==typeof Symbol?Symbol.toStringTag:"";var w=b()?function(t){var r,e,n,o,u;if(null==t)return v.call(t);e=t[g],u=g,r=null!=(o=t)&&d.call(o,u);try{t[g]=void 0}catch(r){return v.call(t)}return n=v.call(t),r?t[g]=e:delete t[g],n}:function(t){return v.call(t)},h=Boolean.prototype.toString;var m=b();function _(t){return"object"==typeof t&&(t instanceof Boolean||(m?function(t){try{return h.call(t),!0}catch(t){return!1}}(t):"[object Boolean]"===w(t)))}function j(t){return y(t)||_(t)}function E(){return new Function("return this;")()}p(j,"isPrimitive",y),p(j,"isObject",_);var S="object"==typeof self?self:null,A="object"==typeof window?window:null,O="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},T="object"==typeof O?O:null;var B=function(t){if(arguments.length){if(!y(t))throw new TypeError("invalid argument. Must provide a boolean primitive. Value: `"+t+"`.");if(t)return E()}if(S)return S;if(A)return A;if(T)return T;throw new Error("unexpected error. Unable to resolve global object.")}(),P=B.document&&B.document.childNodes,C=Int8Array;function x(){return/^\s*function\s*([^(]*)/i}var V=/^\s*function\s*([^(]*)/i;p(x,"REGEXP",V);var M=Array.isArray?Array.isArray:function(t){return"[object Array]"===w(t)};function k(t){return null!==t&&"object"==typeof t}function G(t){var r,e,n,o;if(("Object"===(e=w(t).slice(8,-1))||"Error"===e)&&t.constructor){if("string"==typeof(n=t.constructor).name)return n.name;if(r=V.exec(n.toString()))return r[1]}return k(o=t)&&(o._isBuffer||o.constructor&&"function"==typeof o.constructor.isBuffer&&o.constructor.isBuffer(o))?"Buffer":e}p(k,"isObjectLikeArray",function(t){if("function"!=typeof t)throw new TypeError("invalid argument. Must provide a function. Value: `"+t+"`.");return function(r){var e,n;if(!M(r))return!1;if(0===(e=r.length))return!1;for(n=0;n<e;n++)if(!1===t(r[n]))return!1;return!0}}(k));var L="function"==typeof t||"object"==typeof C||"function"==typeof P?function(t){return G(t).toLowerCase()}:function(t){var r;return null===t?"null":"object"===(r=typeof t)?G(t).toLowerCase():r};function F(t){return"function"===L(t)}var I=Math.floor;function R(t){return"object"==typeof t&&null!==t&&"number"==typeof t.length&&(r=t.length,I(r)===r)&&t.length>=0&&t.length<=4294967295;var r}function U(t){var r=typeof t;return null!==t&&("object"===r||"function"===r)&&F(t.next)}function N(){var t,r=arguments,e=r[0],n="https://stdlib.io/e/"+e+"?";for(t=1;t<r.length;t++)n+="&arg[]="+encodeURIComponent(r[t]);return n}function X(){var t,r,e;if(1===(t=arguments.length)&&R(arguments[0]))r=arguments[0].slice(),t=r.length;else for(r=[],e=0;e<t;e++)r.push(arguments[e]);if(0===t)throw new Error("insufficient arguments. Must provide at least one iterator function.");for(e=0;e<t;e++)if(!F(r[e]))throw new TypeError(N("invalid arguments. All arguments must be functions. Value: `%s`.",r[e]));return n;function n(n){var o;if(!U(n))throw new TypeError(N("0Ch49",n));for(o=n,e=0;e<t-1;e++)if(!U(o=r[e](o)))throw new TypeError(N("0Ch4T",o));return r[t-1](o)}}export{X as default};
//# sourceMappingURL=mod.js.map
