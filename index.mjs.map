{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport isArrayLike from '@stdlib/assert-is-array-like-object';\nimport isIteratorLike from '@stdlib/assert-is-iterator-like';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Returns an iterator pipeline.\n*\n* @param {(Function|FunctionArray)} iterFcn0 - iterator function or an array of iterator functions\n* @param {...Function} [iterFcn] - iterator function(s)\n* @throws {TypeError} all arguments must be functions\n* @throws {Error} must provide at least one iterator function\n* @returns {Function} iterator pipeline\n*\n* @example\n* import randu from '@stdlib/random-iter-randu';\n* import iterSomeBy from '@stdlib/iter-some-by';\n* import iterHead from '@stdlib/iter-head';\n* import iterThunk from '@stdlib/iter-pipeline-thunk';\n*\n* function threshold( r ) {\n*     return ( r > 0.95 );\n* }\n*\n* var it1 = iterThunk( iterHead, 100 );\n* var it2 = iterThunk( iterSomeBy, 5, threshold );\n*\n* var p = iterPipeline( it1, it2 );\n*\n* var bool = p( randu() );\n* // returns <boolean>\n*/\nfunction iterPipeline() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\n\tnFuncs = arguments.length;\n\tif ( nFuncs === 1 && isArrayLike( arguments[ 0 ] ) ) {\n\t\tf = arguments[ 0 ].slice();\n\t\tnFuncs = f.length;\n\t} else {\n\t\tf = [];\n\t\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\t\tf.push( arguments[ i ] );\n\t\t}\n\t}\n\tif ( nFuncs === 0 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide at least one iterator function.' );\n\t}\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( 'invalid arguments. All arguments must be functions. Value: `%s`.', f[ i ] ) );\n\t\t}\n\t}\n\treturn pipeline;\n\n\t/**\n\t* Pipeline function.\n\t*\n\t* @private\n\t* @param {Iterator} iterator - source iterator\n\t* @throws {TypeError} must provide an iterator\n\t* @throws {TypeError} each iterator function, except the last iterator function, within an iterator pipeline must return an iterator\n\t* @returns {(Iterator|*)} an iterator or pipeline result\n\t*/\n\tfunction pipeline( iterator ) {\n\t\tvar iter;\n\t\tif ( !isIteratorLike( iterator ) ) {\n\t\t\tthrow new TypeError( format( '0Ch49', iterator ) );\n\t\t}\n\t\titer = iterator;\n\t\tfor ( i = 0; i < nFuncs-1; i++ ) {\n\t\t\titer = f[ i ]( iter );\n\t\t\tif ( !isIteratorLike( iter ) ) {\n\t\t\t\tthrow new TypeError( format( '0Ch4T', iter ) );\n\t\t\t}\n\t\t}\n\t\treturn f[ nFuncs-1 ]( iter );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterPipeline;\n"],"names":["iterPipeline","nFuncs","f","i","arguments","length","isArrayLike","slice","push","Error","isFunction","TypeError","format","pipeline","iterator","iter","isIteratorLike"],"mappings":";;iXAyDA,SAASA,IACR,IAAIC,EACAC,EACAC,EAGJ,GAAgB,KADhBF,EAASG,UAAUC,SACEC,EAAaF,UAAW,IAC5CF,EAAIE,UAAW,GAAIG,QACnBN,EAASC,EAAEG,YAGX,IADAH,EAAI,GACEC,EAAI,EAAGA,EAAIF,EAAQE,IACxBD,EAAEM,KAAMJ,UAAWD,IAGrB,GAAgB,IAAXF,EACJ,MAAM,IAAIQ,MAAO,wEAElB,IAAMN,EAAI,EAAGA,EAAIF,EAAQE,IACxB,IAAMO,EAAYR,EAAGC,IACpB,MAAM,IAAIQ,UAAWC,EAAQ,mEAAoEV,EAAGC,KAGtG,OAAOU,EAWP,SAASA,EAAUC,GAClB,IAAIC,EACJ,IAAMC,EAAgBF,GACrB,MAAM,IAAIH,UAAWC,EAAQ,QAASE,IAGvC,IADAC,EAAOD,EACDX,EAAI,EAAGA,EAAIF,EAAO,EAAGE,IAE1B,GADAY,EAAOb,EAAGC,GAAKY,IACTC,EAAgBD,GACrB,MAAM,IAAIJ,UAAWC,EAAQ,QAASG,IAGxC,OAAOb,EAAGD,EAAO,GAAKc,EACtB,CACF"}